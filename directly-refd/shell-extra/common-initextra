alias cppshell="nd ~/.config/home-manager/dev_shells/cpp"
alias binshell="nd ~/.config/home-manager/dev_shells/bin_debug"
alias pyshell="nd ~/.config/home-manager/dev_shells/python"

alias tmux="tmux -2"

alias cat="bat --no-paging --style=changes,header,header-filename,header-filesize,snip"
alias catp="bat --no-paging --plain"
alias less="bat --style=auto"
alias lessp="bat --plain"
alias tree="tree --gitignore"
alias treei="command tree"
alias rm="rm -rf"

alias run="rofi -show drun"
alias emoji="rofi -show emoji"; # emojis broken.
alias window="rofi -show window"

alias cdr='cd $(git rev-parse --show-toplevel)'
alias ls=lsd

alias dud="du -d 1 -h"
alias duf="du -sh"
alias t="tail -f"
alias o="xdg-open"
alias hms="home-manager switch --flake $HOME/.config/home-manager/#${HM_HOME_ID}"
alias weather="curl wttr.in/London"
alias rs="openrussian"

# copied from https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/common-aliases
alias l="ls -lFh"
alias la="ls -lAFh"
alias lr="ls -lRFh"
alias lt="ls -ltFh"
alias ll="ls -l"
alias ldot="ls -ld .*"
alias lS='ls -- -l1FSsh .*' # size
alias lart="ls -1Fart" # modif date oldest first
alias lrt="ls -1Frt" # modif date
alias lsr="ls -lARFh" # all recursive
alias lsn="ls -1"  # one col

# functions
cl() { cd "$1" && la; }

mkcd() {
  test -d "$1" && echo "directory $1 already existed.  Entering it...";
  test -d "$1" || mkdir -p "$1";
  cd "$1" || echo "directory $1 does not exist.";
}

routes() {
    ip -d -j route show table all | \
      jq '(.[][] | arrays) |= tostring' | \
      mlr --j2p 'unsparsify then reorder' -f dst,gateway,dev,prefsrc,scope,table,type,metric,protocol;
}

repo_size() {
  part="$1" # owner/repo
  in_kilobytes=$(curl -sG "https://api.github.com/repos/$part" | jq '.size')
  in_MB=$(( in_kilobytes / 1024 ))
  echo "$in_MB MB"
}

read_linux_ts(){
  local nanoseconds=$1
  local seconds=$((nanoseconds / 1000000000 ))
  local nanoseconds_remainder=$((nanoseconds % 1000000000 ))
  date -d "@$seconds" +"+Y-%m-%d %H:%M:%S.$(printf '%09d' $nanoseconds_remainder)"
}

start_tmux(){
  # start into the one tmux session
  if [ -x "$(command -v tmux)" ] && [ -n "${DISPLAY}" ] && [ -z "${TMUX}" ]; then
    cd "$HOME" || true
		# creates one tmux group; all new shells will start attached to this (shares windows, but not dup)
    tmux -2 new-session -t main >/dev/null 2>&1
  fi      
}
